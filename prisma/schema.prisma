generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model order {
  id               String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  flower_sender_id String       @db.Uuid
  organization_id  String       @db.Uuid
  created_at       DateTime     @default(now()) @db.Timestamp(6)
  updated_at       DateTime     @default(now()) @db.Timestamp(6)
  user             user         @relation(fields: [flower_sender_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  organization     organization @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  voice_note       voice_note[]
}

model organization {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  order       order[]
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  order        order[]
  organization organization[]
}

model voice_note {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  audio_file String   @db.VarChar(255)
  qr_code    String   @db.VarChar(255)
  order_id   String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  order      order    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
